#version 430
uint GRROUP_SIZE = 20;
layout (local_size_x = 20, local_size_y = 1, local_size_z = 1) in;


int currentEdgeIteration = 0;
float SPEED_DIVISOR = 800;
float AREA_MULTIPLICATOR = 10000;
float speed = 1;
float area = 1000;
float gravity = 10;

struct GraphicData
{
    vec4 position;
    vec4 color;
    float size;
    float dx;
    float dy;
    float dz;
};

struct Connections
{
    int from;
    int to;
};

layout (std430, binding = 0) buffer DataBuffer 
{
	GraphicData data[];
};

layout (std430, binding = 11) buffer LineBuffer 
{
	GraphicData lines[];
};

layout (std430, binding = 8) buffer DataConnections
{
	Connections connections[];
};

layout( location = 1 ) uniform int graphDataSize;
layout( location = 9 ) uniform int connectionSize;

void main(void)
{
    uint index = gl_GlobalInvocationID.x;
    // if(index > connectionSize) return;

    for(int i = 0; i < 200; i+=2)
    {
        lines[i].position = vec4(-100, i, 1, 1);
        lines[i].color = vec4(1,1,1,1);
        lines[i + 1].position = vec4(100, i, 1, 1);
        lines[i + 1].color = vec4(1,1,1,1);
    }
}