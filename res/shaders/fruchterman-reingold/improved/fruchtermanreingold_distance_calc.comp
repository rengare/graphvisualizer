#version 430

layout (local_size_x = 128) in;

float SPEED_DIVISOR = 800.0;
float AREA_MULTIPLICATOR = 1000.0;

layout( location = 12 ) uniform float area = 100.0;

struct GraphicData
{
    vec4 position;
    vec4 color;
    float size;
    float dx;
    float dy;
    float dz;
};

struct Connections
{
    int from;
    int to;
};

layout (std430, binding = 0) buffer DataBuffer 
{
	GraphicData data[];
};

layout (std430, binding = 8) buffer DataConnections
{
	Connections connections[];
};

// layout (std430, binding = 15) buffer RepulsiveBuffer 
// {
// 	vec4 repulsiveDistances[];
// };

shared vec4 cache[ gl_WorkGroupSize.x ];

layout( location = 1 ) uniform int graphDataSize;

void synchronize()
{
	memoryBarrierShared();
	barrier();
}
float k;

vec3 interaction(vec4 currentPosition, vec4 cachedPosition){
    vec3 dist = currentPosition.xyz - cachedPosition.xyz;
    float distSqrt = sqrt(dist.x * dist.x + dist.y * dist.y + dist.z * dist.z);
    float repulsive = k / distSqrt;
    
    dist = dist / distSqrt * repulsive;

    return dist;
}

void main(void)
{
    uint globalIndex = gl_GlobalInvocationID.x;
    int N = int(gl_NumWorkGroups.x*gl_WorkGroupSize.x);

    if(globalIndex > graphDataSize) return;

    vec4 currentModelPosition = data[globalIndex].position;
    
    k = ((AREA_MULTIPLICATOR * area) / (1.0 + N));
    k = k * k;

    vec3 t = vec3(0.0);

    // for(uint tile = 0; tile < N; tile += gl_WorkGroupSize.x) {
    //     cache[gl_LocalInvocationIndex] = data[tile + gl_LocalInvocationIndex].position;
    //     groupMemoryBarrier();
    //     barrier();
    //     for(int i = 0;i<gl_WorkGroupSize.x;++i) {
    //         t += interaction(currentModelPosition, cache[i]);            
    //     }
    //     groupMemoryBarrier();
    //     barrier();
    // }
           

    for (uint j = 0; j < N; j++)
    {
        if (globalIndex != j)
        {
            t += interaction(currentModelPosition, data[j].position);   
        }
    }
    
    // synchronize();

    data[globalIndex].dx = t.x;
    data[globalIndex].dy = t.y;
    data[globalIndex].dz = t.z;

}