#version 430
layout (local_size_x = 256) in;

struct GraphicData
{
    vec4 position;
    vec4 color;
    float size;
    float dx;
    float dy;
    float dz;
};

struct Connections
{
    int from;
    int to;
};

layout (std430, binding = 0) buffer DataBuffer 
{
	GraphicData data[];
};

layout (std430, binding = 11) buffer LineBuffer 
{
	GraphicData lines[];
};

layout (std430, binding = 8) buffer DataConnections
{
	Connections connections[];
};

layout( location = 1 ) uniform int graphDataSize;
layout( location = 9 ) uniform int connectionSize;

void main(void)
{

    uint globalIndex = gl_GlobalInvocationID.x;
    if(globalIndex > connectionSize) return;

    lines[globalIndex * 2] = data[connections[globalIndex].from];
    lines[globalIndex * 2 + 1] = data[connections[globalIndex].to];
}